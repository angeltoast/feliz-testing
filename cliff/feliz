#!/bin/bash

# feliz (formerly Achoo!) Arch Linux Installation Script

# Developed by Elizabeth Mills, incorporating some code adapted from the
# excellent Evo/Lution script by Carl Duff and AUI scripts by HelmuthDU.

#
# Include files
#
if [[ -f `pwd`/shared ]]; then
  source shared
else
  echo "missing file: shared"
  exit 1
fi
if [[ -f `pwd`/various ]]; then
  source various
else
  echo "missing file: various"
  exit 1
fi
if [[ -f `pwd`/partitioning ]]; then
  source partitioning
else
  echo "missing file: partitioning"
  exit 1
fi
if [[ -f `pwd`/desktop ]]; then
  source desktop
else
  echo "missing file: desktop"
  exit 1
fi
if [[ -f `pwd`/listgen ]]; then
  source listgen
else
  echo "missing file: listgen"
  exit 1
fi

Backtitle=" If you need guidance, consult the Arch Wiki Beginner's Guide"
Passed=$Backtitle
StartTime=$(date +%s)

# Check partition table & offer options
CheckParts

if [ $AutoPart -eq 0 ]; then
  BuildPartitionLists # Display information about the available partitions
  AllocateRoot
  if [ -n "${PartitionList}" ]
  then
    AllocateSwap  # Display remaining partitions and allocate swap
  fi
  if [ -n "${PartitionList}" ]  # Check contents of PartitionList again
  then
    MorePartitions
  fi
fi

# Select kernel and device for Grub
SetKernel
if [ $AutoPart -eq 0 ]; then
  SetGrubDevice
fi

# Keyboard layout
getkeymap

# Localisation
SetTimeZone
setlocale
SetHostname

# Add extras
PickLuxuries
if [ $Scope != "Basic" ]; then
  UserName
  # Use dmidecode to check for Virtualbox installation
  # pacman -Sy --noconfirm dmidecode >/dev/null 2>> feliz.log # Comment this line for compiling
  IsInVbox=`dmidecode --type 1 | grep 'Product Name' | cut -c 16-`
  if [ ${IsInVbox} = "VirtualBox" ]; then
    ConfirmVbox
  else
    IsInVbox=""
  fi
fi

# Allow user to change any variables
FinalCheck

#
# No further user intervention from here
#

InstallationMode

MountPartitions

# Set mirrorlist
ReflectorMirrorList

# Install kernel
InstallKernel

# Set the default PATH variable
arch_chroot "PATH=/usr/lib/systemd/system:/etc/systemd/system:/usr/local/sbin:/usr/local/bin:/usr/bin"

TPecho "Generating fstab"
genfstab -U -p /mnt > /mnt/etc/fstab 2>> feliz.log
if [ ${SwapFile} ]; then
  TPecho "Making /swapfile"
  fallocate -l ${SwapFile} /mnt/swapfile >/dev/null 2>> feliz.log
  chmod 600 /mnt/swapfile >/dev/null 2>> feliz.log
  mkswap /mnt/swapfile >/dev/null 2>> feliz.log
  swapon /mnt/swapfile >/dev/null 2>> feliz.log
  echo "/swapfile none  swap  defaults  0 0" >> /mnt/etc/fstab
fi

TPecho "Setting hostname"
echo ${HostName} > /mnt/etc/hostname 2>> feliz.log
sed -i "/127.0.0.1/s/$/ ${HostName}/" /mnt/etc/hosts 2>> feliz.log
sed -i "/::1/s/$/ ${HostName}/" /mnt/etc/hosts 2>> feliz.log

# Set up locale, etc
TPecho "Preparing locale.gen"
echo "${CountryLocale} UTF-8" > /mnt/etc/locale.gen 2>> feliz.log # eg: en_US.UTF-8 UTF-8
arch_chroot "locale-gen"
TPecho "Preparing locale.conf"
echo "LANG=${CountryLocale}" > /mnt/etc/locale.conf 2>> feliz.log # eg: LANG=en_US.UTF-8
export "LANG=${CountryLocale}" 2>> feliz.log # eg: LANG=en_US.UTF-8
TPecho "Setting clock"
arch_chroot "ln -sf /usr/share/zoneinfo/${ZONE}/${SUBZONE} /etc/localtime"
arch_chroot "hwclock --systohc --utc"

if [ $Scope != "Basic" ]; then
  TPecho "Enabling dhcpcd"
  arch_chroot "systemctl enable dhcpcd.service"
  TPecho "Installing and configuring network services"
  pacstrap /mnt networkmanager network-manager-applet rp-pppoe 2>> feliz.log
  arch_chroot "systemctl enable NetworkManager.service && systemctl enable NetworkManager-dispatcher.service"
fi

if [ ${GrubDevice} ]; then
  TPecho "Installing Grub to $GrubDevice"
  pacstrap /mnt grub 2>> feliz.log
  if [ $OSprober = "Y" ]; then
    pacstrap /mnt os-prober 2>> feliz.log
  fi
  arch_chroot "grub-install --target=i386-pc --recheck ${GrubDevice}"
  arch_chroot "grub-mkconfig -o /boot/grub/grub.cfg"
else
  TPecho "Not installing Grub"
fi

TPecho "Running mkinitcpio"
if [ $Kernel = "1" ]; then
  arch_chroot "mkinitcpio -p linux-lts"
else
  arch_chroot "mkinitcpio -p linux"
fi

# Set keyboard to selected language at next startup
echo KEYMAP=${Countrykbd} > /mnt/etc/vconsole.conf 2>> feliz.log

# Extra processes for desktop installation
if [ $Scope != "Basic" ]; then
  CheckUsers=`cat /mnt/etc/passwd | grep ${UserName}`
  # If not already exist, create user
  if [ -z ${CheckUsers} ]; then
    TPecho "Adding user ${UserName} ... "
    arch_chroot "useradd ${UserName} -m -g users -G wheel,storage,power,network,video,audio,lp -s /bin/bash"
    # Set up basic configuration files and permissions for user
    TPecho "Setting up user configuration"
    arch_chroot "cp /etc/skel/.bashrc /home/${UserName}"
    arch_chroot "chown -R ${UserName}:users /home/${UserName}"
    sed -i '/%wheel ALL=(ALL) ALL/s/^#//' /mnt/etc/sudoers 2>> feliz.log
  else
    TPecho "User already exists"
  fi
  # Various bits
  pacstrap /mnt vrms 2>> feliz.log # Virtual Richard Michael Stallman to detect non-free software
  TPecho "Adding Flash and other Multimedia Codecs"
  pacstrap /mnt a52dec autofs faac faad2 flac jasper lame libdca libdv libmad libmpeg2 libtheora libvorbis libxv wavpack x264 xvidcore gstreamer0.10-plugins pulseaudio pulseaudio-alsa libdvdcss libdvdread libdvdnav dvd+rw-tools dvdauthor dvgrab flashplugin 2>> feliz.log
  TPecho "Installing wireless tools"
  pacstrap /mnt b43-fwcutter ipw2100-fw ipw2200-fw zd1211-firmware 2>> feliz.log
  pacstrap /mnt iw wireless_tools wpa_actiond wpa_supplicant dialog wifi-menu 2>> feliz.log
  TPecho "Installing X, graphics, etc"
  pacstrap /mnt xorg-server xorg-server-utils xorg-apps xorg-xinit xorg-twm 2>> feliz.log
  pacstrap /mnt xf86-input-synaptics 2>> feliz.log
  pacstrap /mnt gvfs gamin 2>> feliz.log

  # Install desktop environments, window managers and display managers
  TestExistingDM # First clear any previously installed DM before installing DE
  if [ -n "${LuxuriesList}" ]; then   # Then parse through LuxuriesList checking for DEs
    for i in ${LuxuriesList}
    do
      case $i in
        "Cinnamon") TPecho "Installing 'Cinnamon' Desktop Environment"
          InstallDM
          pacstrap /mnt cinnamon gnome-terminal 2>> feliz.log
          ;;
        "Deepin") TPecho "Installing Deepin Desktop Environment"
          pacstrap /mnt deepin ${DDEextras} &>> feliz.log
          if [ -z ${DisplayManager} ]; then
            arch_chroot "systemctl enable lightdm.service" &>> feliz.log
          else
            InstallDM
          fi
          ;;
        "Enlightenment") TPecho "Installing 'Enlightenment' Desktop Environment"
          InstallDM
          pacstrap /mnt enlightenment 2>> feliz.log
          ;;
        "Fluxbox") TPecho "Installing 'Fluxbox' Window Manager"
          InstallDM
          pacstrap /mnt fluxbox 2>> feliz.log
          ;;
        "Gnome") TPecho "Installing 'Gnome' Desktop Environment"
          pacstrap /mnt gnome gedit ${GoodiesGnome} 2>> feliz.log
          if [ -z ${DisplayManager} ]; then
            arch_chroot "systemctl enable gdm.service" 2>> feliz.log
          else
            InstallDM
          fi
          ;;
        "gnome-shell") TPecho "Installing 'gnome-shell'"
          InstallDM
          pacstrap /mnt gnome-shell 2>> feliz.log
          ;;
        "KDE") TPecho "Installing Plasma meta package"
          pacstrap /mnt plasma-meta 2>> feliz.log
          if [ -z ${DisplayManager} ]; then
            arch_chroot "systemctl enable sddm.service" 2>> feliz.log
          else
            InstallDM
          fi
          TPecho "Installing KDE applications package"
          pacstrap /mnt kde-applications 2>> feliz.log
          ;;
        "LXDE") TPecho "Installing 'LXDE' Desktop Environment"
          pacstrap /mnt lxde gedit 2>> feliz.log
          if [ -z ${DisplayManager} ]; then
            arch_chroot "systemctl enable lxdm.service" 2>> feliz.log
            echo "session=/usr/bin/startlxde" >> /mnt/etc/lxdm/lxdm.conf
          else
            InstallDM
          fi
          ;;
        "LXQt") TPecho "Installing 'LXQt' Desktop Environment"
          InstallDM
          pacstrap /mnt lxqt xterm oxygen-icons 2>> feliz.log
          ;;
        "Mate") TPecho "Installing 'Mate' Desktop Environment"
          InstallDM
          pacstrap /mnt mate mate-extra 2>> feliz.log
          ;;
        "Openbox") TPecho "Installing 'Openbox' Window Manager"
          InstallDM
          pacstrap /mnt openbox xterm 2>> feliz.log
          ;;
        "Xfce") TPecho "Installing 'Xfce' Desktop Environment"
          InstallDM
          pacstrap /mnt xfce4 polkit-gnome ${GoodiesXfce} 2>> feliz.log
          ;;
        *) continue # Ignore others on this pass
      esac
    done

  # ... then install the others
    for i in ${LuxuriesList}
    do
      case $i in
        "Cinnamon" | "Deepin" | "Enlightenment" | "Fluxbox" | "Gnome" | "gnome-shell" | "KDE" | "LXDE" | "LXQt" | "Mate" | "Openbox" | "Xfce") continue # Ignore DEs this pass
          ;;
        "yaourt") # Copy modified pacman.conf to new system and install Yaourt
          TPecho "Modifying pacman.conf and installing Yaourt"
          cp pacman.conf /mnt/etc 2>> feliz.log # For installed system
          cp pacman.conf /etc 2>> feliz.log # For installer
          pacman -Sy 2>> feliz.log # Update
          pacstrap /mnt yaourt 2>> feliz.log
        ;;
        "cairo-dock") TPecho "Installing $i and cairo-dock-plug-ins"
          pacstrap /mnt cairo-dock cairo-dock-plug-ins 2>> feliz.log
        ;;
        "conky") TPecho "Installing $i"
          pacstrap /mnt conky 2>> feliz.log
          cp conkyrc /mnt/home/$UserName/.conkyrc 2>> feliz.log
          cp Conky.desktop /mnt/home/$UserName/.config.autostart 2>> feliz.log
        ;;
        *) TPecho "Installing $i"
          pacstrap /mnt $i 2>> feliz.log
      esac
    done
  fi
fi

EndTime=$(date +%s)
Difference=$(( $EndTime-$StartTime ))
DIFFMIN=$(( $Difference/60 ))
DIFFSEC=$(( $Difference % 60 ))

SetRootPassword
if [ $Scope != "Basic" ]; then
  SetUserPassword
fi
cp feliz.log /mnt/etc # Copy installation log for reference
Message="Congratulations, installation is finished."
echo
listgen1 "Reboot Shutdown" "" "nodone"
case $Response in
  1) systemctl reboot
  ;;
  *) shutdown now
esac
