#!/bin/bash

# feliz (formerly Achoo!) Arch Linux Installation Script
# squiff edition - Semi-graphical User Interface Functions
# Developed by Elizabeth Mills, incorporating some code adapted from the
# excellent Evo/Lution script by Carl Duff and AUI scripts by HelmuthDU.

#
# Include files
#
if [[ -f `pwd`/shared ]]; then
  source shared
else
  echo "missing file: shared"
  exit 1
fi
if [[ -f `pwd`/various ]]; then
  source various
else
  echo "missing file: various"
  exit 1
fi
if [[ -f `pwd`/partitioning ]]; then
  source partitioning
else
  echo "missing file: partitioning"
  exit 1
fi
if [[ -f `pwd`/desktop ]]; then
  source desktop
else
  echo "missing file: desktop"
  exit 1
fi
if [[ -f `pwd`/listgen ]]; then
  source listgen
else
  echo "missing file: listgen"
  exit 1
fi

Backtitle=" If you need guidance, consult the Arch Wiki - https://wiki.archlinux.org/"
Passed=$Backtitle
StartTime=$(date +%s)
echo "Begin" >> feliz.log

# Check partition table & offer options
CheckParts

if [ $AutoPart -eq 0 ]; then
  BuildPartitionLists # Display information about the available partitions
  AllocateRoot
  if [ -n "${PartitionList}" ]
  then
    AllocateSwap  # Display remaining partitions and allocate swap
  fi
  if [ -n "${PartitionList}" ]  # Check contents of PartitionList again
  then
    MorePartitions
  fi
fi

# Select kernel and device for Grub
SetKernel
if [ $AutoPart -eq 0 ]; then
  SetGrubDevice
fi

# Keyboard layout
getkeymap

# Localisation
SetTimeZone
setlocale
SetHostname

# Add extras
PickLuxuries
if [ $Scope != "Basic" ]; then
  UserName
  # Use dmidecode to check for Virtualbox installation
  # pacman -Sy --noconfirm dmidecode >/dev/null &>> feliz.log # Comment this line for compiling
  IsInVbox=`dmidecode --type 1 | grep 'Product Name' | cut -c 16-`
  if [ ${IsInVbox} = "VirtualBox" ]; then
    ConfirmVbox
  else
    IsInVbox=""
  fi
fi

# Allow user to change any variables
FinalCheck

# No further user intervention from here ..................

MountPartitions

ReflectorMirrorList

InstallKernel

PrintOne "Preparing local services" ""
# Set the default PATH variable
arch_chroot "PATH=/usr/lib/systemd/system:/etc/systemd/system:/usr/local/sbin:/usr/local/bin:/usr/bin"
# Generate fstab
genfstab -U -p /mnt > /mnt/etc/fstab &>> feliz.log
if [ ${SwapFile} ]; then
  fallocate -l ${SwapFile} /mnt/swapfile >/dev/null &>> feliz.log
  chmod 600 /mnt/swapfile >/dev/null &>> feliz.log
  mkswap /mnt/swapfile >/dev/null &>> feliz.log
  swapon /mnt/swapfile >/dev/null &>> feliz.log
  echo "/swapfile none  swap  defaults  0 0" >> /mnt/etc/fstab &>> feliz.log
fi
echo ${HostName} > /mnt/etc/hostname &>> feliz.log
sed -i "/127.0.0.1/s/$/ ${HostName}/" /mnt/etc/hosts &>> feliz.log
sed -i "/::1/s/$/ ${HostName}/" /mnt/etc/hosts &>> feliz.log
# Set up locale, etc
echo "${CountryLocale} UTF-8" > /mnt/etc/locale.gen &>> feliz.log # eg: en_US.UTF-8 UTF-8
arch_chroot "locale-gen"
echo "LANG=${CountryLocale}" > /mnt/etc/locale.conf &>> feliz.log # eg: LANG=en_US.UTF-8
export "LANG=${CountryLocale}" &>> feliz.log # eg: LANG=en_US.UTF-8
arch_chroot "ln -sf /usr/share/zoneinfo/${ZONE}/${SUBZONE} /etc/localtime"
arch_chroot "hwclock --systohc --utc"
# Networking
if [ $Scope != "Basic" ]; then
  arch_chroot "systemctl enable dhcpcd.service"
  pacstrap /mnt networkmanager network-manager-applet rp-pppoe &>> feliz.log
  arch_chroot "systemctl enable NetworkManager.service && systemctl enable NetworkManager-dispatcher.service"
fi

if [ ${GrubDevice} ]; then
  PrintOne "Installing Grub to $GrubDevice" ""
  pacstrap /mnt grub &>> feliz.log
  if [ $OSprober = "Y" ]; then
    pacstrap /mnt os-prober &>> feliz.log
  fi
  arch_chroot "grub-install --target=i386-pc --recheck ${GrubDevice}"
  arch_chroot "grub-mkconfig -o /boot/grub/grub.cfg"
else
  echo "Not installing Grub" >> feliz.log
fi

DisplayProgress "Running mkinitcpio" 10
if [ $Kernel = "1" ]; then
  arch_chroot "mkinitcpio -p linux-lts"
else
  arch_chroot "mkinitcpio -p linux"
fi

# Set keyboard to selected language at next startup
echo KEYMAP=${Countrykbd} > /mnt/etc/vconsole.conf &>> feliz.log

# Extra processes for desktop installation
if [ $Scope != "Basic" ]; then
  # Various bits
  PassArray=() # Ensure the array is empty
  PassArray=( a52dec autofs faac faad2 flac jasper lame libdca libdv libmad libmpeg2 libtheora libvorbis libxv wavpack x264 xvidcore gstreamer0.10-plugins pulseaudio pulseaudio-alsa libdvdcss libdvdread libdvdnav dvd+rw-tools dvdauthor dvgrab flashplugin b43-fwcutter ipw2100-fw ipw2200-fw zd1211-firmware iw wireless_tools wpa_actiond wpa_supplicant dialog xorg-server xorg-server-utils xorg-apps xorg-xinit xorg-twm xf86-input-synaptics gvfs gamin )
  ProgressArray "Adding Codecs, X, graphics, etc" # Display gauge while installing with pacstrap
  
  # Install desktop environments, window managers and display managers
  InstallLuxuries # common/shared
  #
  UserAdd
fi

EndTime=$(date +%s)
Difference=$(( $EndTime-$StartTime ))
DIFFMIN=$(( $Difference / 60 ))
DIFFSEC=$(( $Difference % 60 ))

SetRootPassword
if [ $Scope != "Basic" ]; then
  SetUserPassword
fi

cp feliz.log /mnt/etc # Copy installation log for reference
dialog --msgbox "\nCongratulations, installation is finished. It's time to exit the Feliz installer and start your new Arch Linux system. Don't forget to remove the installation media before restarting." 12 40

shutdown -h now
