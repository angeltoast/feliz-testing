#!/bin/bash

# The Feliz installation scripts for Arch Linux
# 17 June 2016

# /common/feliz - Main module

# Developed by Elizabeth Mills
# With thanks to Carl Duff

# This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

# A copy of the GNU General Public License is available from the Feliz page at http://sourceforge.net/projects/feliz/files or https://github.com/angeltoast/feliz, or write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

#
# Include source files
#
source shared
source various
source partitioning
source desktop

Backtitle="The Feliz install scripts for Arch Linux"

StartTime=$(date +%s)
echo "${StartTime}" >> feliz.log

CheckParts                             # Check partition table & offer options

if [ $AutoPart -eq 0 ]; then
  BuildPartitionLists                  # Prepare table of available partitions
  AllocateRoot                         # Allow user to select root partition
  
  if [ -n "${PartitionList}" ]; then   # If there are unallocated partitions
    AllocateSwap                       # Display display them for user to choose swap
  else                                 # If there is no partition for swap
    NoPartitions                       # Inform user and allow swapfile
  fi
  
  if [ -n "${PartitionList}" ]; then   # Check contents of PartitionList again
    MorePartitions                     # Allow user to allocate any remaining partitions
  fi
fi

# Select kernel and device for Grub
SetKernel
if [ $AutoPart -eq 0 ]; then
  SetGrubDevice
fi

# Keyboard layout
getkeymap

# Localisation
SetTimeZone
setlocale
SetHostname

# Add extras
PickLuxuries
if [ $Scope != "Basic" ]; then
  UserName
  # Use dmidecode to check for Virtualbox installation
  IsInVbox=`dmidecode --type 1 | grep 'Product Name' | cut -c 16-`
  if [ ${IsInVbox} = "VirtualBox" ]; then
    ConfirmVbox
  else
    IsInVbox="N"
  fi
fi

# Allow user to change any variables
FinalCheck

# No further user intervention from here ..................

MountPartitions

ReflectorMirrorList

InstallKernel

TPecho "Preparing local services" ""

# Set the default PATH variable
arch_chroot "PATH=/usr/lib/systemd/system:/etc/systemd/system:/usr/local/sbin:/usr/local/bin:/usr/bin"

# Generate fstab
genfstab -U -p /mnt > /mnt/etc/fstab 2>> feliz.log

if [ ${SwapFile} ]; then
  fallocate -l ${SwapFile} /mnt/swapfile >/dev/null 2>> feliz.log
  chmod 600 /mnt/swapfile >/dev/null &>> feliz.log 
  mkswap /mnt/swapfile >/dev/null &>> feliz.log
  swapon /mnt/swapfile >/dev/null &>> feliz.log
  echo "/swapfile none  swap  defaults  0 0" >> /mnt/etc/fstab 2>> feliz.log
fi

echo ${HostName} > /mnt/etc/hostname 2>> feliz.log
sed -i "/127.0.0.1/s/$/ ${HostName}/" /mnt/etc/hosts &>> feliz.log
sed -i "/::1/s/$/ ${HostName}/" /mnt/etc/hosts &>> feliz.log

# Set up locale, etc
echo "${CountryLocale} UTF-8" > /mnt/etc/locale.gen 2>> feliz.log # eg: en_US.UTF-8 UTF-8
arch_chroot "locale-gen"
echo "LANG=${CountryLocale}" > /mnt/etc/locale.conf 2>> feliz.log # eg: LANG=en_US.UTF-8
export "LANG=${CountryLocale}" &>> feliz.log                      # eg: LANG=en_US.UTF-8
arch_chroot "ln -sf /usr/share/zoneinfo/${ZONE}/${SUBZONE} /etc/localtime"
arch_chroot "hwclock --systohc --utc"

# Networking
if [ $Scope != "Basic" ]; then
  arch_chroot "systemctl enable dhcpcd.service"
  pacstrap /mnt networkmanager network-manager-applet rp-pppoe &>> feliz.log
  arch_chroot "systemctl enable NetworkManager.service && systemctl enable NetworkManager-dispatcher.service"
fi

# Grub
if [ ${GrubDevice} ]; then
  TPecho "Installing Grub2 to $GrubDevice" ""
  pacstrap /mnt grub &>> feliz.log
  if [ $OSprober = "Y" ]; then
    pacstrap /mnt os-prober &>> feliz.log
  fi
  arch_chroot "grub-install --target=i386-pc --recheck ${GrubDevice}"
  arch_chroot "grub-mkconfig -o /boot/grub/grub.cfg"
else
  echo "Not installing Grub" >> feliz.log
fi

# mkinicpio
McInitCPIO

# Set keyboard to selected language at next startup
echo KEYMAP=${Countrykbd} > /mnt/etc/vconsole.conf 2>> feliz.log

# Extra processes for desktop installation
if [ $Scope != "Basic" ]; then
  AddCodecs # Various bits
      
  # Virtualbox code if selected
  if [ ${IsInVbox} = "VirtualBox" ]; then
    pacstrap /mnt virtualbox-guest-utils &>> feliz.log
    echo blacklist i2c_piix4 > /mnt/etc/modprobe.d/modprobe.conf 2>> feliz.log  # To overcome piix4 Virtualbox error
    cp virtualbox.conf /mnt/etc/modules-load.d/ 2>> feliz.log
  fi

  InstallLuxuries # common/shared Install DEs, WMs and DMs

  UserAdd # common/shared
fi

EndTime=$(date +%s)
Difference=$(( $EndTime-$StartTime ))
DIFFMIN=$(( $Difference / 60 ))
DIFFSEC=$(( $Difference % 60 ))

SetRootPassword
if [ $Scope != "Basic" ]; then
  SetUserPassword
fi

cp feliz.log /mnt/etc # Copy installation log for reference

DisplayFinished

shutdown -h now
