#!/bin/bash

# Feliz (formerly Achoo!) Arch Linux Installation Script
# Initialising module: tests the internet connection and downloads the files

# Developed by Elizabeth Mills, incorporating some code adapted from the
# excellent Evo/Lution script by Carl Duff and AUI scripts by HelmuthDU.

#
# Basic cli functions required for this script
#
Centre() { # Aligned text according to screen size
  width=`tput cols`
  lov=${#1}
  if [ ${lov} -lt ${width} ]; then
    stpt=$(( ($width - $lov) / 2 ))
    EMPTY="$(printf '%*s' $stpt)"
    echo "$EMPTY $1"
  else
    echo "$1"
  fi
}

TPread() { # Aligned prompt for user-entry - returns result through $Response
  T_COLS=`tput cols`
  lov=${#1}
  if [ ${lov} -lt ${T_COLS} ]; then
    stpt=$(( ($T_COLS - $lov) / 2 ))
  elif [ ${lov} -gt ${T_COLS} ]; then
    stpt=0
  else
    stpt=$(( ($T_COLS - 10) / 2 ))
  fi
  EMPTY="$(printf '%*s' $stpt)"
  read -p "$EMPTY $1" Response
}

read_timed() { # $1 = text to display; $2 = duration
  T_COLS=`tput cols`
  lov=${#1}
  if [ $2 ]; then
    tim=$2
  else
    tim=2
  fi
  if [ ${lov} -lt ${T_COLS} ]; then
    stpt=$(( ($T_COLS - $lov) / 2 ))
    EMPTY="$(printf '%*s' $stpt)"
  else
    EMPTY=""
  fi
  read -t ${tim} -p "$EMPTY $1"
  echo
}

CheckInternet() { 
  Service="N"
  while [ $Service = "N" ]
  do
    case $Chosen in
    1) Centre "Welcome to the Feliz Arch Linux installation script." # CLI welcome screen
      Centre "A working internet connection is needed for installation."
      Centre "Checking your connection now ..."
      CheckConnection
      case $Service in
        "N") read_timed "Sorry, installation cannot continue without an internet connection."
          exit
        ;;
        *) Centre "Downloading files - please wait"
        break
      esac
    ;;
    *) dialog --backtitle "VERSION" --title " Installer Version " \
          --infobox "Welcome to the Feliz Arch Linux installation script, testing edition.\nA working internet connection is needed for installation.\nChecking your connection now ..." 20 50
      CheckConnection
      case $Service in
        "N") read_timed 
          dialog --backtitle "VERSION" --title " Installer Version " \
          --infobox "Sorry, installation cannot continue without an internet connection." 5 30
          exit
        ;;
        *) dialog --backtitle "VERSION" --title " Installer Version " \
          --infobox "Downloading files - please wait" 5 30
        break
      esac
    esac
  done
}

CheckConnection() {
while [ $Service = "N" ]
do
  case $Chosen in
    1) if [[ ! $(ping -c 3 google.com) ]]; then
        wifi-menu &>> feliz.log 
        if [[ ! $(ping -c 3 google.com) ]]; then
          Centre "Unable to establish a connection. Ensure that your"
          Centre "computer is able to access the internet."
          TPread "Try again? (y/n): "
          Retry=$Response
          if [ $Retry != "Y" ] && [ $Retry != "y" ]; then
            exit
            break
          fi
        else
          read_timed "Connection detected"
          Service="Y"
        fi
      else
        read_timed "Connection detected"
        Service="Y"
      fi
    ;;
    *) if [[ ! $(ping -c 3 google.com) ]]; then
        wifi-menu &>> feliz.log 
        if [[ ! $(ping -c 3 google.com) ]]; then
          dialog --backtitle "VERSION" --title " Installer Version " --nocancel \
          --yesno "Unable to establish a connection. Ensure that your computer is able to access the internet.\nTry again? (y/n): " 10 50
          if [ $? -eq 1 ]; then
            exit
            break
          fi
        else
          dialog --backtitle "VERSION" --title " Installer Version " \
          --infobox "Connection detected" 5 30
          Service="Y"
        fi
      else
          dialog --backtitle "VERSION" --title " Installer Version " \
          --infobox "Connection detected" 5 30
          Service="Y"
      fi
  esac
done
}

UIselection() {
  dialog --backtitle "VERSION" --title " Installer Version " --nocancel \
  --menu "You can now choose between feliz's traditional, helpful, command-line interface, or a new semi-graphical dialog system" 20 50 2 \
  "1" "Traditional command line" \
  "2" "New! Semi-graphical" 2> output.file
    Chosen=$(cat output.file)
    clear
}

#
# Execute
#
clear
# Offer user alternative UI
UIselection

CheckInternet

# Download and unzip the complete testing archive from Github
wget -N https://github.com/angeltoast/feliz-testing/archive/master.zip &>> feliz.log
unzip -o master.zip &>> feliz.log
cp feliz-testing-master/common/* . &>> feliz.log

# Copy the appropriate files to working directory
  case $Chosen in
    1) cp feliz-testing-master/cliff/* . &>> feliz.log # CLI
    ;;
    *) cp feliz-testing-master/squiff/* . &>> feliz.log # Semi-graphical
  esac

# Clean up then run main feliz function
rm -rf feliz-testing-master &>> feliz.log
rm *.zip &>> feliz.log
./feliz
