#!/bin/bash

# Feliz (formerly Achoo!) Arch Linux Installation Script
# Initialising module: tests the internet connection and downloads the files

# Developed by Elizabeth Mills, incorporating some code adapted from the
# excellent Evo/Lution script by Carl Duff and AUI scripts by HelmuthDU.

#
# NOTES:
# Basic translation file used for this script
# Language selection is now the first option
# The basic language file is deleted at the end, and replaced
# with the full translation file

#
# Functions
#
SetLanguage() { # User selects language, which is then fixed
  dialog --clear --backtitle "$_Backtitle" --menu "Choose your language\nElige tu idioma\nChoisissez votre langue\nВыберите ваш язык\nwähle deine Sprache" 18 50 7 \
        "English" "English" \
        "French" "Francais" \
        "Polish" "Polski" \
        "Portuguese" "Português" \
        "Romanian" "Română" \
        "Spanish" "Espanhol" \
        "Serbian" "Srpski" 2> feliz.output
  RetVal=$?
  case $RetVal in
    0) # ie: Language selected
      Language=`cat feliz.output`
      Language="${Language,,}"    # Make lower case
    ;;
    *) # Catchall for <Cancel> button (1) selected (no action) or Esc
      Language="english"          # Set default language to English
  esac
  LanguageFile="init.${Language}" # Translation files shipped in iso
  cp $LanguageFile feliz.language # Save required file
  rm init.*                       # Remove all shipped translation files
  source feliz.language
  Backtitle="${Welcome}"
}

CheckInternet() { 
  Service="N"
  while [ $Service = "N" ]
  do
    dialog --backtitle "$Backtitle" --title "$Title" --infobox "$Needed\n\n$Checking" 8 50
    CheckConnection
    case $Service in
      "N") dialog --backtitle"$Backtitle" --title "$Title" --infobox "$Sorry" 5 40
        exit
      ;;
      *) dialog --backtitle "$Backtitle" --title "$Title" --infobox "$Downloading" 5 30
        break
    esac
  done
}

CheckConnection() {
  while [ $Service = "N" ]
  do
    if [[ ! $(ping -c 3 google.com) ]]; then
      wifi-menu &>> feliz.log 
      if [[ ! $(ping -c 3 google.com) ]]; then
        dialog --backtitle "$Backtitle" --title "$Title" --nocancel --yesno "$Unable\n$Ensure\nTry again?" 10 50
        RetVal=$?
        if [ $RetVal -eq 1 ]; then
          shutdown -h now
        fi
      else
        dialog --backtitle "$Backtitle" --title "$Title" --infobox "$Connection" 5 30
        Service="Y"
      fi
    else
      dialog --backtitle "$Backtitle" --title "$Title" --infobox "$Connection" 5 30
      Service="Y"
    fi
  done
}

UIselection() {
  dialog --backtitle "$Backtitle" --title " ${Installer_Version} " --nocancel \
  --menu "${Choose_Version} ..." 12 52 2 \
      "cli" "Command-line Interface" \
      "sgi" "Semi-graphical Interface" 2> output.file
    Chosen=$(cat output.file)
    clear
}

#
# Execute
#
Backtitle="Feliz Arch Linux installation script"

SetLanguage

CheckInternet

# Download and unzip the complete testing archive from Github
wget -N https://github.com/angeltoast/feliz-testing/archive/master.zip &>> feliz.log 
unzip -o master.zip &>> feliz.log 
cp -r feliz-testing-master/common/* . &>> feliz.log 

# Set user language
LanguageFile="feliz.${Language}"
cp $LanguageFile temp.language  # Save required file
rm feliz.*                      # Remove all translation files
mv temp.language feliz.language # Rename language file

# Offer user cli or GUI
UIselection 

# Copy the remaining appropriate files to working directory
case $Chosen in
  "cli") cp feliz-testing-master/cliff/* . &>> feliz.log # CLI
  ;;
  *) cp feliz-testing-master/squiff/* . &>> feliz.log # Semi-graphical
esac

# Clean up then run main feliz function
rm -rf feliz-testing-master &>> feliz.log
rm *.zip &>> feliz.log
echo "Begin" > feliz.log
./feliz
