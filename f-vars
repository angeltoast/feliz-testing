#!/bin/bash

# The Feliz2 installation scripts for Arch Linux
# Developed by Elizabeth Mills
# Revision date: 4th December 2016

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.

# This program is distributed in the hope that it will be useful, but
#      WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#            General Public License for more details.

# A copy of the GNU General Public License is available from the Feliz2
#        page at http://sourceforge.net/projects/feliz2/files
#        or https://github.com/angeltoast/feliz2, or write to:
#                 The Free Software Foundation, Inc.
#                  51 Franklin Street, Fifth Floor
#                    Boston, MA 02110-1301 USA

# In this module:

# 1) Global functions

print_heading() {   # Always use this function to clear the screen
  tput sgr0         # Make sure colour inversion is reset
  clear
  T_COLS=$(tput cols)                   # Get width of terminal
  tput cup 0 $(((T_COLS/2)-20))         # Move the cursor to left of center
  printf "%-s\n" "$Backtitle"           # Display backtitle
  printf "%$(tput cols)s\n"|tr ' ' '-'  # Draw a line across width of terminal
  cursor_row=3                          # Save cursor row after heading
}

PrintOne() { # Text is translated, then aligned according to content and screen size
  Text="$1"
  if [ ! $2 ]; then                 # Don't translate if $2
    Translate "$Text"
    Text="$Result"
  fi
  width=$(tput cols)
  EMPTY=" "
  lov=${#Text}
  if [ ${lov} -lt ${width} ]; then
    stpt=$(( (width - lov) / 2 ))
    EMPTY="$(printf '%*s' $stpt)"
  fi
  Echo "$EMPTY $Text"
}

PrintMany() { # Subsequent item(s) in an aligned list
  Text="$1"
  if [ ! $2 ]; then                 # Don't translate if $2
    Translate "$Text"
    Text="$Result"
  fi
  Echo "$EMPTY $Text"
}

read_timed() { # Timed display - $1 = text to display; $2 = duration
  T_COLS=`tput cols`
  lov=${#1}
  if [ $2 ]; then
    tim=$2
  else
    tim=2
  fi
  if [ ${lov} -lt ${T_COLS} ]; then
    stpt=$(( ($T_COLS - $lov) / 2 ))
    EMPTY="$(printf '%*s' $stpt)"
  else
    EMPTY=""
  fi
  read -t ${tim} -p "$EMPTY $1"
  cursor_row=$((cursor_row+1))
}

invalid_option() {
  read_timed "          Invalid entry. Please try again ...                     " 1
}

SetLanguage() {
  print_heading
  listgen1 "$(ls *.lan | cut -d'.' -f1)"
  case $Result in
  "" | "Exit") LanguageFile=english.lan
  ;;
  *) LanguageFile="${Result}.lan"
  esac
}

Translate() { # Called by ReadOne & ReadMany and by other functions as required
              # $1 is text to be translated
  Text="$1"
  # Get line number of text in english.lan | restrict to first find | display only number
  RecordNumber=$(grep -n "$Text" english.lan | head -n 1 | cut -d':' -f1)
  case $RecordNumber in
  "" | 0) Result="$Text"  # If not found, use English
  ;;
  *) Result="$(head -n ${RecordNumber} ${LanguageFile} | tail -n 1)" # Read item from target file
  esac
}

# 2) Declaration of variables and arrays

# Partition variables and arrays
declare -a AddPartList    # Array of additional partitions eg: /dev/sda5
declare -a AddPartMount   # Array of mountpoints for the same partitions eg: /home
declare -a AddPartType    # Array of format type for the same partitions eg: ext4
declare -a PartitionArray # Array of long identifiers
declare -a NewArray       # For copying any array
declare -a NewArray       # For copying any array

declare -a button_start   # Used in listgen
declare -a button_text    # Used in listgen
declare -a button_len     # Used in listgen

declare -A LabellingArray # Associative array of user labels for partitions
declare -A Labelled       # Associative array of labelled partitions
declare -A FileSystem     # Associative array of filesystem types (ext* swap)
BootSize=""               # Boot variable for EasyEFI
RootSize=""               # Root variable for EasyEFI
SwapSize=""               # Swap variable for EasyEFI
HomeSize=""               # Home variable for EasyEFI
HomeType=""               # Home variable for EasyEFI
SwapPartition=""          # eg: /dev/sda3
FormatSwap="N"            # User selects whether to reuse swap
MakeSwap="Y"
SwapFile=""               # eg: 2G
IsSwap=""                 # Result of lsblk test
RootPartition=""          # eg: /dev/sda2
RootType=""               # eg: ext4
Partition=""              # eg: sda1
AutoPart=0                # Flag - changes to 1 if auto-partition is chosen
UseDisk="sda"             # Used if more than one disk
DiskDetails=0             # Size of selected disk
TypeList="ext3 ext4 btrfs xfs" # Partition format types

# Grub & kernel variables
GrubDevice=""             # eg: /dev/sda
Kernel="1"                # Default 1 = LTS
IsInVbox="N"              # Result of test to see if installation is in Virtualbox
OSprober="Y"

# Location variables
CountryCode=""            # eg: GB ... for mirrorlist
CountryLocale=""          # eg: en_GB.UTF-8
Countrykbd=""             # eg: uk
ZONE=""                   # eg: Europe For time
SUBZONE=""                # eg: London
LanguageFile="english.lan" # For translation
RecordNumber=0            # Used during translation

# Desktop environment, display manager and greeter variables
DesktopEnvironment=""     # eg: xfce
DisplayManager=""         # eg: lightdm
Greeter=""                # eg: lightdm-gtk-greeter (Not required for some DMs)

# Root and user variables
HostName=""               # eg: arch-linux
UserName=""               # eg: archie
Scope=""                  # Installation scope ... 'Full' or 'Basic'

# Global user input variables
Response=""
Result=""

# Miscellaneous
Backtitle="Feliz2 Arch Linux installation script"
declare -a Options        # For listgen functions
PrimaryFile=""

# ---- Partitioning ----
PartitioningOptions="cfdisk guided auto leave"
LongPart[1]="Open cfdisk so I can partition manually"
LongPart[2]="Guided manual partitioning tool"
LongPart[3]="Allow feliz to partition the whole device"
LongPart[4]="Leave it as it is"
# EFI
EFIPartitioningOptions="guided auto leave"
LongPartE[1]="Guided manual partitioning tool"
LongPartE[2]="Allow feliz to partition the whole device"
LongPartE[3]="Leave it as it is"

# ---- Arrays for extra Applications ----
CategoriesList="Accessories Desktop_Environments Graphical Internet Multimedia Office Programming Window_Managers"
Categories[1]="Accessories"
Categories[2]="Desktop_Environments"
Categories[3]="Graphical"
Categories[4]="Internet"
Categories[5]="Multimedia"
Categories[6]="Office"
Categories[7]="Programming"
Categories[8]="Window_Managers"
# Accessories
Accessories="brasero conky galculator gparted leafpad lxterminal pcmanfm"
LongAccs[1]="Disc burning application from Gnome"
LongAccs[2]="Desktop time and system information"
LongAccs[3]="Handy desktop calculator"
LongAccs[4]="Tool to make/delete/resize partitions"
LongAccs[5]="Handy lightweight text editor from LXDE"
LongAccs[6]="Lightweight terminal emulator from LXDE"
LongAccs[7]="The file manager from LXDE"
# Desktops
Desktops="Budgie Cinnamon Deepin Gnome KDE LXDE LXQt Mate Xfce"
LongDesk[1]="Modern desktop focusing on simplicity & elegance"
LongDesk[2]="Slick DE from the Mint team      "
LongDesk[3]="The Deepin Desktop Environment"
LongDesk[4]="Full-featured, modern DE"
LongDesk[5]="Plasma 5 and accessories pack"
LongDesk[6]="Traditional, lightweight DE"
LongDesk[7]="Lightweight and modern Qt DE"
LongDesk[8]="Traditional DE from the Mint team"
LongDesk[9]="Lightweight, highly configurable DE"
# Graphical
Graphical="evince gimp imagemagick gthumb simple-scan xsane"
LongGraph[1]="Reader for PDF & other document formats"
LongGraph[2]="Advanced image editing suite"
LongGraph[3]="Command-line image manipulation"
LongGraph[4]="Image viewer & basic editor"
LongGraph[5]="A simple scanner GUI"
LongGraph[6]="Full-featured GTK-based sane frontend"
# Internet
Internet="chromium epiphany filezilla firefox qbittorrent thunderbird transmission-gtk"
LongNet[1]="Open source web browser from Google     "
LongNet[2]="Gnome WebKitGTK+ browser (aka Web)"
LongNet[3]="Fast & reliable FTP, FTPS & SFTP client"
LongNet[4]="Extensible browser from Mozilla"
LongNet[5]="Open source BitTorrent client"
LongNet[6]="Feature-rich email client from Mozilla"
LongNet[7]="Easy-to-use BitTorrent client"
# Multimedia
Multimedia="avidemux-gtk banshee handbrake openshot vlc xfburn"
LongMulti[1]="Easy-to-use video editor               "
LongMulti[2]="Feature-rich audio player"
LongMulti[3]="Simple yet powerful video transcoder"
LongMulti[4]="Easy-to-use non-linear video editor"
LongMulti[5]="Middleweight video player"
LongMulti[6]="GUI CD burner"
# Office
Office="abiword gnumeric libreoffice orage scribus"
LongOffice[1]="Full-featured word processor        "
LongOffice[2]="Spreadsheet program from GNOME"
LongOffice[3]="Open-source office software suite"
LongOffice[4]="Calendar & task manager (incl with Xfce)"
LongOffice[5]="Desktop publishing program"
# Programming
Programming="bluefish codeblocks emacs geany git netbeans"
LongProg[1]="GTK+ IDE with support for Python plugins  "
LongProg[2]="Open source & cross-platform C/C++ IDE"
LongProg[3]="Extensible, customizable text editor"
LongProg[4]="Advanced text editor & IDE"
LongProg[5]="Open source distributed version control system"
LongProg[6]="Integrated development environment (IDE)"
# WindowManagers
WindowManagers="Enlightenment Fluxbox Openbox cairo-dock docky fbpanel tint2"
LongWMs[1]="Window manager and toolkit"
LongWMs[2]="Light, fast and versatile WM"
LongWMs[3]="Lightweight, powerful & configurable stacking WM"
LongWMs[4]="Customizable dock & launcher application"
LongWMs[5]="For opening applications & managing windows"
LongWMs[6]="Desktop panel"
LongWMs[7]="Desktop panel"
